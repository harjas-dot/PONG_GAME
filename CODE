# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
ball_vel=[0,0]
ball_pos=[WIDTH/2,HEIGHT/2]
paddle1_pos=(HEIGHT/2)-HALF_PAD_HEIGHT
paddle2_pos=(HEIGHT/2)-HALF_PAD_HEIGHT
paddle1_vel=0
paddle2_vel=0
acc=2
vel=3.5
score1=0
score2=0
# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel,vel # these are vectors stored as lists
    ball_pos=[WIDTH/2,HEIGHT/2]
    if(direction==True):
        ball_vel=[vel,-vel]
    elif(direction==False):
        ball_vel=[-vel,-vel]
    



# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    score1=0
    score2=0
    vel=3.5
    paddle1_pos=(HEIGHT/2)-HALF_PAD_HEIGHT
    paddle2_pos=(HEIGHT/2)-HALF_PAD_HEIGHT
    spawn_ball(RIGHT)

def draw(canvas):
    global vel,score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel,paddle1_vel, paddle2_vel,HALF_PAD_HEIGHT
 
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
        
    # update ball
    if(ball_pos[1]>=(HEIGHT-BALL_RADIUS)):
        ball_vel[1]=-ball_vel[1]
    elif(ball_pos[1]<=(BALL_RADIUS)):
        ball_vel[1]=-ball_vel[1]
   
    
    #guttter rebound
    if(ball_pos[0]<=(PAD_WIDTH+BALL_RADIUS)):
        if(ball_pos[1]>=paddle1_pos and ball_pos[1]<=(paddle1_pos+PAD_HEIGHT)):
            ball_vel[0]=-ball_vel[0]
            vel+=(vel*0.1)
        else:
            score2+=1
            vel=3.5
            spawn_ball(RIGHT)
            
    elif(ball_pos[0]>=(WIDTH-BALL_RADIUS-PAD_WIDTH)):
        if(ball_pos[1]>=paddle2_pos and ball_pos[1]<=(paddle2_pos+PAD_HEIGHT)):
            ball_vel[0]=-ball_vel[0]
            vel+=(vel*0.1)
        else:
            score1+=1
            vel=3.5
            spawn_ball(LEFT)
    
    ball_pos[0]=ball_pos[0]+ball_vel[0]
    ball_pos[1]=ball_pos[1]+ball_vel[1]
    # draw ball
    canvas.draw_circle(ball_pos,BALL_RADIUS,1,"White","White")
    
    
    # update paddle's vertical position, keep paddle on the screen
    
    if(paddle1_pos>=0):
        paddle1_pos+= paddle1_vel
    else:
        paddle1_pos=0
    if(paddle1_pos<=(HEIGHT-PAD_HEIGHT)):
        paddle1_pos+= paddle1_vel
    else:
        paddle1_pos=HEIGHT-PAD_HEIGHT
    if(paddle2_pos>=0):
        paddle2_pos+= paddle2_vel
    else:
        paddle2_pos=0
    if(paddle2_pos<=(HEIGHT-PAD_HEIGHT)):
        paddle2_pos+= paddle2_vel
    else:
        paddle2_pos=HEIGHT-PAD_HEIGHT
    
    
    # draw paddles
    canvas.draw_line([PAD_WIDTH,(paddle1_pos+PAD_HEIGHT)],[PAD_WIDTH,paddle1_pos],PAD_WIDTH,"White")
    canvas.draw_line([(WIDTH - PAD_WIDTH),(paddle2_pos+PAD_HEIGHT)],[(WIDTH - PAD_WIDTH),paddle2_pos],PAD_WIDTH,"White")       
    
    
    # draw scores
    canvas.draw_text(str(score1),[(WIDTH/4),30],20,"White")   
    canvas.draw_text(str(score2),[((3*WIDTH)/4),30],20,"White")
def keydown(key):
    global paddle1_vel, paddle2_vel,acc,paddle1_pos,paddle2_pos,HEIGHT,PAD_HEIGHT
    
    if(key==simplegui.KEY_MAP["s"]):
         paddle1_vel+=acc
    elif(key==simplegui.KEY_MAP["w"]):
         paddle1_vel-=acc
    elif(key==simplegui.KEY_MAP["down"]):
         paddle2_vel+=acc
    elif(key==simplegui.KEY_MAP["up"]):
         paddle2_vel-=acc
    
  

        
def keyup(key):
    global paddle1_vel, paddle2_vel,acc,paddle1_pos,HEIGHT,PAD_HEIGHT
    if(key==simplegui.KEY_MAP["s"]):
         paddle1_vel-=acc
    elif(key==simplegui.KEY_MAP["w"]):
         paddle1_vel+=acc
    elif(key==simplegui.KEY_MAP["down"]):
         paddle2_vel-=acc
    elif(key==simplegui.KEY_MAP["up"]):
         paddle2_vel+=acc
            

# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button("NEW GAME",new_game)


# start frame

frame.start()
